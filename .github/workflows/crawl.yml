name: Run Crawler on Mon, Wed, Fri

on:
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * 1,3,5'  # 1 AM Dubai time on Mon, Wed, Fri

jobs:
  crawl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Calculate current feed hash
        id: calc_hash
        run: |
          sha256=$(sha256sum google_feed/google_merchant_feed.csv | cut -d' ' -f1)
          echo "current_hash=$sha256" >> $GITHUB_OUTPUT

      - name: Read previous hash
        id: read_prev_hash
        run: |
          if [[ -f .github/last_feed_hash.txt ]]; then
            prev_hash=$(cat .github/last_feed_hash.txt)
          else
            prev_hash=""
          fi
          echo "prev_hash=$prev_hash" >> $GITHUB_OUTPUT

      - name: Compare hashes
        id: check_hash
        run: |
          if [[ "${{ steps.calc_hash.outputs.current_hash }}" != "${{ steps.read_prev_hash.outputs.prev_hash }}" ]]; then
            echo "feed_changed=true" >> $GITHUB_OUTPUT
          else
            echo "feed_changed=false" >> $GITHUB_OUTPUT

      - name: Save new hash
        if: ${{ steps.check_hash.outputs.feed_changed == 'true' }}
        run: |
          echo "${{ steps.calc_hash.outputs.current_hash }}" > .github/last_feed_hash.txt
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .github/last_feed_hash.txt
          git commit -m "Update feed hash [skip ci]"
          git push

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create necessary directories
        run: |
          mkdir -p product_urls google_feed meta_feed

      # Run crawl steps only if feed changed
      - name: Run crawler script
        if: ${{ steps.check_hash.outputs.feed_changed == 'true' }}
        run: python crawler.py

      - name: Run feed generator
        if: ${{ steps.check_hash.outputs.feed_changed == 'true' }}
        run: python product_feed_generator.py

      - name: Run Meta Shopping feed generator
        if: ${{ steps.check_hash.outputs.feed_changed == 'true' }}
        run: python meta_feed_generator.py

      - name: Download Google product taxonomy
        if: ${{ steps.check_hash.outputs.feed_changed == 'true' }}
        run: python download_taxonomy.py
        continue-on-error: false

      # These steps run every time (validate/fix/upload)
      - name: Validate Google product categories
        run: python download_and_validate_full.py
        continue-on-error: false
        env:
          FEED_FILE: google_feed/google_merchant_feed.csv

      - name: Fix invalid product categories
        run: python fix_categories.py
        env:
          FEED_FILE: google_feed/google_merchant_feed.csv

      - name: Upload fixed feed to Google Sheets
        run: python sheets_publisher.py
        env:
          GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}

      - name: Commit and push updated files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          for file in product_urls/product_links.csv product_urls/product_links.xml google_feed/product_feed.csv google_feed/product_feed.xml google_feed/google_merchant_feed.csv google_feed/google_merchant_feed_fixed.csv category_validation_full_report.csv unmatched_invalid_categories.csv meta_feed/facebook_product_feed.csv meta_feed/facebook_product_feed.xml; do
            if [ -f "$file" ]; then
              git add "$file"
            fi
          done

          git commit -m "Automated feed update and validation - $(date -u +'%Y-%m-%d %H:%M:%S UTC')" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
